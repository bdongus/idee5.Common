// <auto-generated />
#nullable enable
using System;
using System.Threading;
using System.Threading.Tasks;

namespace {{Namespace}} {
    /// <inheritdoc/>
    public class {{MethodName}}CommandHandler : ICommandHandler<{{MethodName}}Command> {

        /// <inheritdoc/>
        public {{MethodName}}CommandHandler(ISession session) : base(session) {
        }
        /// <inheritdoc/>
        public override async Task Handle({{MethodName}}Command command) {
            if (command is null) throw new ArgumentNullException(nameof(command));

            Console.WriteLine("Method {{MethodName}} with parameters {{MethodParameters}} would be invoked.");
        }
    }
}
